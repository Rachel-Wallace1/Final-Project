{"ast":null,"code":"import axios from 'axios'; // For React (assuming you're using a bundler like webpack)\n\nconst WeatherAPI = {\n  getLatLngFromZipCode: async function (zipCode) {\n    const apiKey = 'AIzaSyBKZub7-r93X7TH3lpJRtFfl8jgqZsgS4k'; // Replace with your own API key\n    const url = `https://maps.googleapis.com/maps/api/geocode/json?address=${zipCode}&key=${apiKey}`;\n    try {\n      const response = await axios.get(url);\n      const {\n        results\n      } = response.data;\n      if (results.length > 0) {\n        const {\n          lat,\n          lng\n        } = results[0].geometry.location;\n        return {\n          latitude: lat,\n          longitude: lng\n        };\n      } else {\n        throw new Error('Unable to find coordinates for the provided zip code.');\n      }\n    } catch (error) {\n      console.log('Error:', error.message);\n    }\n  }\n};\nexport default WeatherAPI;","map":{"version":3,"names":["axios","WeatherAPI","getLatLngFromZipCode","zipCode","apiKey","url","response","get","results","data","length","lat","lng","geometry","location","latitude","longitude","Error","error","console","log","message"],"sources":["/Users/rachelwallace/Documents/Harvard-Courses/Developing Single-Page Web Applications/finalProject-weatherApp/my-app/src/WeatherAPI.js"],"sourcesContent":["import axios from 'axios'; // For React (assuming you're using a bundler like webpack)\n\n\nconst WeatherAPI = {\n    getLatLngFromZipCode: async function(zipCode) {\n        const apiKey = 'AIzaSyBKZub7-r93X7TH3lpJRtFfl8jgqZsgS4k'; // Replace with your own API key\n        const url = `https://maps.googleapis.com/maps/api/geocode/json?address=${zipCode}&key=${apiKey}`;\n\n        try {\n            const response = await axios.get(url);\n            const { results } = response.data;\n\n            if (results.length > 0) {\n                const { lat, lng } = results[0].geometry.location;\n                return { latitude: lat, longitude: lng };\n            } else {\n                throw new Error('Unable to find coordinates for the provided zip code.');\n            }\n        } catch (error) {\n            console.log('Error:', error.message);\n        }\n    }\n};\n\nexport default WeatherAPI;"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO,CAAC,CAAC;;AAG3B,MAAMC,UAAU,GAAG;EACfC,oBAAoB,EAAE,eAAAA,CAAeC,OAAO,EAAE;IAC1C,MAAMC,MAAM,GAAG,yCAAyC,CAAC,CAAC;IAC1D,MAAMC,GAAG,GAAI,6DAA4DF,OAAQ,QAAOC,MAAO,EAAC;IAEhG,IAAI;MACA,MAAME,QAAQ,GAAG,MAAMN,KAAK,CAACO,GAAG,CAACF,GAAG,CAAC;MACrC,MAAM;QAAEG;MAAQ,CAAC,GAAGF,QAAQ,CAACG,IAAI;MAEjC,IAAID,OAAO,CAACE,MAAM,GAAG,CAAC,EAAE;QACpB,MAAM;UAAEC,GAAG;UAAEC;QAAI,CAAC,GAAGJ,OAAO,CAAC,CAAC,CAAC,CAACK,QAAQ,CAACC,QAAQ;QACjD,OAAO;UAAEC,QAAQ,EAAEJ,GAAG;UAAEK,SAAS,EAAEJ;QAAI,CAAC;MAC5C,CAAC,MAAM;QACH,MAAM,IAAIK,KAAK,CAAC,uDAAuD,CAAC;MAC5E;IACJ,CAAC,CAAC,OAAOC,KAAK,EAAE;MACZC,OAAO,CAACC,GAAG,CAAC,QAAQ,EAAEF,KAAK,CAACG,OAAO,CAAC;IACxC;EACJ;AACJ,CAAC;AAED,eAAepB,UAAU"},"metadata":{},"sourceType":"module","externalDependencies":[]}